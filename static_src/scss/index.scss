@import "snippets/import.scss";


.overflow-hack {
  height: auto;
  overflow: hidden;
  max-width: 100%;
}
// as said in the html to avoid overfl

.sliderMoving {
  will-change: transform;
  transition: transform 1s ease-in-out;
  -webkit-transition: transform 1s ease-in-out;
  -moz-transition: transform 1s ease-in-out;
  width: 400%;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: row;

  article {
    box-shadow: 0 10px 20px rgba(0,0,0,0.30), 0 7px 4px rgba(0,0,0,0.22);
    -webkit-box-shadow: 0 10px 20px rgba(0,0,0,0.30), 0 7px 4px rgba(0,0,0,0.22);
    -moz-box-shadow: 0 10px 20px rgba(0,0,0,0.30), 0 7px 4px rgba(0,0,0,0.22);
  }

  article.passed::before {
    content: 'Termin√©';
  }

  article.passed {
    background-color: $light-red;

    h3 {
      text-decoration: line-through;
    }
  }
}
// to have this super sweet animation ni th traditional csstrickery
// obligated to have a high width but i set it with js to have it dynamic
//ici style pour checkbox
.checkbox-container {
  display: flex;
  justify-content: space-around;
  .checkbox {
    width: 28px;
    height: 28px;
    position: relative;
    margin: 20px auto;
    box-shadow: inset 0 1px 1px white, 0 1px 3px rgba(0,0,0,0.5);
    font-size: 2em ;
    label {
      width: 20px;
      height: 20px;
      cursor: pointer;
      position: absolute;
      left: 4px;
      top: 4px;
      box-shadow: inset 0 1px 1px rgba(0,0,0,0.5), 0 1px 0 rgba(255,255,255,1);

      &:after {
        content: '';
        width: 9px;
        height: 5px;
        position: absolute;
        top: 4px;
        left: 4px;
        border: 3px solid #fcfff4;
        border-top: none;
        border-right: none;
        background: transparent;
        opacity: 0;
        transform: rotate(-45deg);
      }

      &:hover::after {
        opacity: 0.3;
      }
    }

    input[type=checkbox] {
      visibility: hidden;

      &:checked + label:after {
        opacity: 1;
        color: $green;
      }
    }
  }
}


.grid-sizer,
.grid-item {
  width: 50%;
}
@media (min-width : 750px) {
  .grid-sizer,
  .grid-item {
    width: 25%;
  }
}
.grid-item {
  float: left;
  display: inherit;
}

.grid-item img {
  display: block;
  max-width: 100%;
}

.test {
  display: none;
}
